C51 COMPILER V9.60.0.0   UART                                                              01/09/2020 16:30:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Output\uart.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\..\Library\StdDriver\src\uart.c LARGE OPTIMIZE(7,SPEED) BROWSE INCDIR
                    -(..\..\Library\Device\Include;..\..\Library\StdDriver\inc) DEBUG OBJECTEXTEND PRINT(.\LST\uart.lst) TABS(2) OBJECT(.\Out
                    -put\uart.obj)

line level    source

   1          
   2          #include "MS51_16K.H"
   3          
   4          /*MS51 new version buadrate */
   5          
   6          void UART_Open(unsigned long u32SysClock, unsigned char u8UARTPort,unsigned long u32Baudrate)
   7          {
   8   1        switch(u8UARTPort)
   9   1        {
  10   2          case UART0_Timer1:
  11   2                P06_QUASI_MODE;    //Setting UART pin as Quasi mode for transmit
  12   2                P07_INPUT_MODE;    //Setting UART pin as Quasi mode for transmit  
  13   2                SCON = 0x50;       //UART0 Mode1,REN=1,TI=1
  14   2                TMOD |= 0x20;      //Timer1 Mode1
  15   2                set_PCON_SMOD;          //UART0 Double Rate Enable
  16   2                set_CKCON_T1M;
  17   2                clr_T3CON_BRCK;          //Serial port 0 baud rate clock source = Timer1
  18   2                TH1 = 256 - (u32SysClock/16/u32Baudrate);
  19   2                set_TCON_TR1;
  20   2            break;
  21   2            
  22   2            case UART0_Timer3:
  23   2                //P06_PUSHPULL_MODE;    //Setting UART pin as Quasi mode for transmit
  24   2                P06_QUASI_MODE;    //Setting UART pin as Quasi mode for transmit
  25   2                //P07_INPUT_MODE;    //Setting UART pin as Quasi mode for transmit
  26   2                P07_QUASI_MODE;    //Setting UART pin as Quasi mode for transmit
  27   2                SCON = 0x50;     //UART0 Mode1,REN=1,TI=1
  28   2                set_PCON_SMOD;        //UART0 Double Rate Enable
  29   2                T3CON &= 0xF8;   //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)
  30   2                set_T3CON_BRCK;        //UART0 baud rate clock source = Timer3
  31   2                RH3    = HIBYTE(65536 - (u32SysClock/16/u32Baudrate));  
  32   2                RL3    = LOBYTE(65536 - (u32SysClock/16/u32Baudrate));  
  33   2                set_T3CON_TR3;         //Trigger Timer3
  34   2            break;
  35   2            
  36   2            case UART1_Timer3:
  37   2                P16_PUSHPULL_MODE;  //Setting UART pin as Quasi mode for transmit
  38   2                P02_INPUT_MODE;  //Setting RXD_1 pin as Input mode for transmit   
  39   2                SCON_1 = 0x50;     //UART1 Mode1,REN_1=1,TI_1=1
  40   2                T3CON = 0x80;     //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1), UART1 in MODE 1
  41   2                RH3    = HIBYTE(65536 - (u32SysClock/16/u32Baudrate));  
  42   2                RL3    = LOBYTE(65536 - (u32SysClock/16/u32Baudrate));     
  43   2                set_T3CON_TR3;             //Trigger Timer3                                                     
             -        
  44   2            break; 
  45   2        }
  46   1      }
  47          
  48          unsigned char Receive_Data(unsigned char UARTPort)
  49          {
  50   1          UINT8 c;
  51   1          switch (UARTPort)
  52   1          {
C51 COMPILER V9.60.0.0   UART                                                              01/09/2020 16:30:03 PAGE 2   

  53   2            case UART0:
  54   2              while (!RI);
  55   2              c = SBUF;
  56   2              RI = 0;
  57   2            break;
  58   2            case UART1:
  59   2              while (!RI_1);
  60   2              c = SBUF_1;
  61   2              RI_1 = 0;
  62   2            break;
  63   2          }
  64   1          return (c);
  65   1      }
  66          
  67          void UART_Send_Data(UINT8 UARTPort, UINT8 c)
  68          {
  69   1        switch (UARTPort)
  70   1          {
  71   2            case UART0:
  72   2              TI = 0;
  73   2              SBUF = c;
  74   2              while(TI==0);
  75   2            break;
  76   2            case UART1:
  77   2              clr_EIE1_ES_1;//暂停uart1中断
  78   2              TI_1 = 0;
  79   2              SBUF_1 = c;
  80   2              while(TI_1==0);
  81   2              set_EIE1_ES_1;//开启uart1中断
  82   2            break;
  83   2          }
  84   1      }
  85          
  86          void UART_Interrupt_Enable(unsigned char u8UARTPort, unsigned char u8UARTINTStatus)
  87          {
  88   1          switch (u8UARTPort)
  89   1          {
  90   2              case UART0: 
  91   2                switch(u8UARTINTStatus)
  92   2                {
  93   3                  case Disable: clr_IE_ES; break;
  94   3                  case Enable:  set_IE_ES; break;
  95   3                }
  96   2              break;
  97   2              case UART1:
  98   2                switch(u8UARTINTStatus)
  99   2                {
 100   3                  case Disable: clr_EIE1_ES_1; break;
 101   3                  case Enable:  set_EIE1_ES_1; break;
 102   3                }
 103   2              break;
 104   2          }
 105   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    484    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   UART                                                              01/09/2020 16:30:03 PAGE 3   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
